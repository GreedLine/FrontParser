[{"/home/devpc/GitKraken/FrontParser/src/App.js":"1","/home/devpc/GitKraken/FrontParser/src/reportWebVitals.js":"2","/home/devpc/GitKraken/FrontParser/src/index.js":"3"},{"size":6406,"mtime":1613385019607,"results":"4","hashOfConfig":"5"},{"size":362,"mtime":1612263737736,"results":"6","hashOfConfig":"5"},{"size":529,"mtime":1612264076463,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"112mien",{"filePath":"11","messages":"12","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/devpc/GitKraken/FrontParser/src/App.js",["15","16"],"import './App.css';\nimport {Layout, Typography, Progress} from 'antd';\nimport styled from 'styled-components'\nimport {useForm} from \"react-hook-form\";\nimport React, {useState, useEffect} from 'react';\nimport {LoadingOutlined} from '@ant-design/icons';\nimport io from 'socket.io-client';\n\n\nfunction App() {\n    const {Header, Content} = Layout;\n    const {Title} = Typography;\n    const axios = require('axios');\n\n    const [loader, setLoader] = useState(false);\n    const [response, setResponse] = useState({});\n    const [gis, setGis] = useState({});\n    const [flamp, setFlamp] = useState({});\n    const [yandex, setYandex] = useState({});\n\n\n    const {register, handleSubmit, errors} = useForm();\n    const onSubmit = (data) => {\n        setLoader(true);\n        console.log(data);\n        axios.post('http://127.0.0.1:5456/create/image', {\n            data\n        }, {withCredentials: true})\n            .then(function (response) {\n                console.log(response);\n            })\n            .catch(function (error) {\n                console.log(error);\n            });\n        let ioClient = io.connect('http://localhost:5456')\n        ioClient.on('connect', socket => {\n            ioClient.on('eventClient', (data) => {\n                console.log(data)\n                setResponse(data);\n                switch (data.parser) {\n                    case 'Gis':\n                        setGis(data)\n                        break;\n                    case 'Flamp':\n                        setFlamp(data)\n                        break;\n                    case 'Yandex':\n                        setYandex(data)\n                        break;\n                }\n            });\n        })\n\n    }\n\n\n    useEffect(() => {\n\n\n    }, []);\n\n    return (\n\n        <Layout>\n            <Header/>\n            <Content>\n                <Container>\n                    <Title>Введите название компании с учетом регистра и пробелов</Title>\n                    <SearchForm onSubmit={handleSubmit(onSubmit)}>\n                        <SearchInput type=\"text\" name='companyName' id='companyName'\n                                     placeholder=\"Введите название компании\"\n                                     ref={register(\n                                         {required: true}\n                                     )}/>\n                        <SearchSubmit type='submit' value='Найти'\n                                      name='submit'\n                                      id='submit'\n                        />\n\n                    </SearchForm>\n                    {errors.companyName && <span>Введите название компании.</span>}\n                    {loader && <ContainerResult>\n                        <ParserContainer>\n                            {gis.isFinish ?\n                                [\n                                    (\n                                        gis.isErrorFinish ?\n                                            <Progress type=\"circle\" percent={100} width={25} status=\"exception\"\n                                                      key='0'/> :\n                                            <Progress type=\"circle\" percent={100} width={25} key='0'/>\n                                    )\n\n                                ]\n                                :\n                                <LoadingOutlined style={{fontSize: 24}} spin/>\n                            }\n                            <ResultSpan>{gis.value}</ResultSpan>\n                        </ParserContainer>\n                        <ParserContainer>\n                            {flamp.isFinish ?\n                                [\n                                    (\n                                        flamp.isErrorFinish ?\n                                            <Progress type=\"circle\" percent={100} width={25} status=\"exception\"\n                                                      key='0'/> :\n                                            <Progress type=\"circle\" percent={100} width={25} key='0'/>\n                                    )\n\n                                ]\n                                :\n                                <LoadingOutlined style={{fontSize: 24}} spin/>\n                            }\n                            <ResultSpan>{flamp.value}</ResultSpan>\n                        </ParserContainer>\n                        <ParserContainer>\n                            {yandex.isFinish ?\n                                [\n                                    (\n                                        yandex.isErrorFinish ?\n                                            <Progress type=\"circle\" percent={100} width={25} status=\"exception\"\n                                                      key='0'/> :\n                                            <Progress type=\"circle\" percent={100} width={25} key='0'/>\n                                    )\n\n                                ]\n                                :\n                                <LoadingOutlined style={{fontSize: 24}} spin/>\n                            }\n                            <ResultSpan>{yandex.value}</ResultSpan>\n                        </ParserContainer>\n                    </ContainerResult>}\n                </Container>\n            </Content>\n        </Layout>\n\n    );\n}\n\nconst ResultSpan = styled.span`\n  margin-left: 20px;\n  font-size: 14px;\n  color: black;\n`\n\nconst ParserContainer = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  align-items: center;\n  margin-top: 15px;\n`\n\nconst ContainerResult = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  align-items: flex-start;\n`\n\nconst SearchForm = styled.form`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n`\n\nconst SearchInput = styled.input`\n  width: 100%;\n  margin-bottom: 0;\n  text-align: inherit;\n  padding: 6.5px 11px;\n  font-size: 16px;\n  border: 1px solid #d9d9d9;\n  outline: none;\n`\nconst SearchSubmit = styled.input`\n  line-height: 1.5715;\n  background: #1890ff;\n  color: #fff;\n  border: none;\n  cursor: pointer;\n  padding: 0 30px;\n  outline: none;\n`\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: flex-start;\n  padding: 20%;\n  min-height: calc(100vh - 80px);\n`\n\n\nexport default App;\n","/home/devpc/GitKraken/FrontParser/src/reportWebVitals.js",[],"/home/devpc/GitKraken/FrontParser/src/index.js",[],{"ruleId":"17","severity":1,"message":"18","line":16,"column":12,"nodeType":"19","messageId":"20","endLine":16,"endColumn":20},{"ruleId":"21","severity":1,"message":"22","line":40,"column":17,"nodeType":"23","messageId":"24","endLine":50,"endColumn":18},"no-unused-vars","'response' is assigned a value but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase"]